{
  "stats": {
    "suites": 3,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2024-10-06T15:56:00.262Z",
    "end": "2024-10-06T15:56:14.383Z",
    "duration": 14121,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "21c9b682-b508-4cc8-9dd8-4ff7968fa81f",
      "title": "",
      "fullFile": "cypress\\e2e\\SignupPage.cy.js",
      "file": "cypress\\e2e\\SignupPage.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "718ab0e1-51a6-4a85-a0bb-b30e8a1493cd",
          "title": "Signup Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0c4bf0b8-49a4-4aab-9396-72aaed7a8590",
              "title": "Valid Signup Actions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "toggles between Buyer and Supplier",
                  "fullTitle": "Signup Page Valid Signup Actions toggles between Buyer and Supplier",
                  "timedOut": null,
                  "duration": 1533,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//toggle buyer \nsignup.getSelectBuyerButton().click();\nsignup.getSelectBuyerButton().should(\"have.class\", \"css-yjcvqi\");\ncy.skipMobile(() => {\n  cy.contains(\"Future-proof carbon credit portfolios—guided by data.\").should(\"be.visible\");\n}); // only visible on desktop\n//toggle supplier\nsignup.getSelectSupplierButton().click();\nsignup.getSelectSupplierButton().should(\"have.class\", \"css-yjcvqi\");\ncy.skipMobile(() => {\n  cy.contains(\"Join global net-zero portfolios—seamlessly.\").should(\"be.visible\");\n}); // only visible on desktop",
                  "err": {},
                  "uuid": "96298d98-e441-41fb-8e6a-60d37c9538a6",
                  "parentUUID": "0c4bf0b8-49a4-4aab-9396-72aaed7a8590",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "navigates to the login page",
                  "fullTitle": "Signup Page Valid Signup Actions navigates to the login page",
                  "timedOut": null,
                  "duration": 1238,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//via login button\nsignup.getLoginButton().click();\ncy.url().should(\"include\", \"/sign-in\");\n//via logo\nsignup.getLogo().click();\ncy.url().should(\"include\", \"/sign-in\");",
                  "err": {},
                  "uuid": "540ea963-70c2-4715-afc0-c295c7f16834",
                  "parentUUID": "0c4bf0b8-49a4-4aab-9396-72aaed7a8590",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "tests back button on Page 2 and checks if data is saved",
                  "fullTitle": "Signup Page Valid Signup Actions tests back button on Page 2 and checks if data is saved",
                  "timedOut": null,
                  "duration": 2248,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.CompletePage1();\nsignup.getBackButton().should(\"be.visible\");\nsignup.getBackButton().click();\n//assert that we are on Page 1\nsignup.getSignUpButton().should(\"be.visible\");\nsignup.getCreateAccountButton().should(\"not.exist\");\n//assert that the data is saved\nsignup.getCompanyNameInput().invoke(\"attr\", \"value\").should(\"not.be.empty\");\nsignup.getEmailInput().invoke(\"attr\", \"value\").should(\"not.be.empty\");\nsignup.getFirstNameInput().invoke(\"attr\", \"value\").should(\"not.be.empty\");\nsignup.getLastNameInput().invoke(\"attr\", \"value\").should(\"not.be.empty\");",
                  "err": {},
                  "uuid": "f8e4df10-2b52-4787-b3dc-952b28ca1d5f",
                  "parentUUID": "0c4bf0b8-49a4-4aab-9396-72aaed7a8590",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "96298d98-e441-41fb-8e6a-60d37c9538a6",
                "540ea963-70c2-4715-afc0-c295c7f16834",
                "f8e4df10-2b52-4787-b3dc-952b28ca1d5f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5019,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b6dfee5c-ab88-4e47-829f-bfd844799d30",
              "title": "Field Validations",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "displays validation error when email format is invalid",
                  "fullTitle": "Signup Page Field Validations displays validation error when email format is invalid",
                  "timedOut": null,
                  "duration": 2131,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.CompletePage1InvalidEmail(\"tami email com\");\nsignup.getSignUpButton().click();\nsignup.getEmailInput().invoke(\"attr\", \"aria-invalid\").should(\"eq\", \"true\");\ncy.contains(\"Please enter a company email address\").should(\"be.visible\");",
                  "err": {},
                  "uuid": "b41f6f0f-9937-4920-a1f5-51660ed236f5",
                  "parentUUID": "b6dfee5c-ab88-4e47-829f-bfd844799d30",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "displays validation error when personal email is used",
                  "fullTitle": "Signup Page Field Validations displays validation error when personal email is used",
                  "timedOut": null,
                  "duration": 2003,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.CompletePage1InvalidEmail(\"tami@gmail.com\");\nsignup.getSignUpButton().click();\nsignup.getEmailInput().invoke(\"attr\", \"aria-invalid\").should(\"eq\", \"true\");\ncy.contains(\"Please enter a company email address\").should(\"be.visible\");\n//TODO: extend to check other emails that are not allowed",
                  "err": {},
                  "uuid": "be1ea0ff-a51e-47e7-8b0d-a79cf0f73e8f",
                  "parentUUID": "b6dfee5c-ab88-4e47-829f-bfd844799d30",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "checks validation for empty fields on Page 1",
                  "fullTitle": "Signup Page Field Validations checks validation for empty fields on Page 1",
                  "timedOut": null,
                  "duration": 2779,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const fields = [{\n  name: \"CompanyName\",\n  message: \"company name\",\n  value: \"Tami Tests Inc\"\n}, {\n  name: \"Email\",\n  message: \"email\",\n  value: \"tami@testinc.com\"\n}, {\n  name: \"FirstName\",\n  message: \"first name\",\n  value: \"Tami\"\n}, {\n  name: \"LastName\",\n  message: \"last name\",\n  value: \"Tests\"\n}];\nsignup.getSignUpButton().click();\n//check validation error for empty fields\ncy.contains(\"Please select account type\").should(\"be.visible\");\nfields.forEach(field => {\n  signup[`get${field.name}Input`]().invoke(\"attr\", \"aria-invalid\").should(\"eq\", \"true\");\n  cy.contains(`Please enter your ${field.message}`).should(\"be.visible\");\n});\n//check that error is hidden when field is filled\nfields.forEach(field => {\n  signup[`fill${field.name}Input`](field.value);\n  signup.getSignUpButton().click();\n  signup[`get${field.name}Input`]().invoke(\"attr\", \"aria-invalid\").should(\"not.exist\");\n  cy.contains(`Please enter your ${field.message}`).should(\"not.exist\");\n});\n//check account type error is hidden when toggled\nsignup.getLastNameInput().clear();\nsignup.getSelectBuyerButton().click();\nsignup.getSignUpButton().click();\ncy.contains(\"Please select account type\").should(\"not.exist\");",
                  "err": {},
                  "uuid": "794a42d3-7a8e-4614-a1c8-2fb3e34c7a05",
                  "parentUUID": "b6dfee5c-ab88-4e47-829f-bfd844799d30",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b41f6f0f-9937-4920-a1f5-51660ed236f5",
                "be1ea0ff-a51e-47e7-8b0d-a79cf0f73e8f",
                "794a42d3-7a8e-4614-a1c8-2fb3e34c7a05"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6913,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}